{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["let formData = {\n  email: '',\n  message: '',\n};\nconst form = document.querySelector('.feedback-form');\n\nconst fillFormFields = () => {\n    const formDataFromLS = JSON.parse(localStorage.getItem('feedback-form-state'));\n\n    if (formDataFromLS === null) {\n        return;\n    }\n\n    formData = formDataFromLS;\n\n    for (const key in formDataFromLS) {\n        if (formDataFromLS.hasOwnProperty(key)) {\n            form.elements[key].value = formDataFromLS[key];\n        }\n    }\n}\n\nfillFormFields();\n\nconst inputHandler = e => {\n    formData[e.target.name] = e.target.value.trim();\n    localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n}\n\nconst submitHandler = e => {\n    e.preventDefault();\n    if (!formData.email || !formData.message) {\n        alert('Fill please all fields');\n        return;\n    }\n    console.log(formData);\n    e.target.reset();\n    localStorage.removeItem('feedback-form-state');\n\n    //clean object\n    formData = {\n      email: '',\n      message: '',\n    };\n    \n};\n\nform.addEventListener('input', inputHandler);\nform.addEventListener('submit', submitHandler);"],"names":["formData","form","fillFormFields","formDataFromLS","key","inputHandler","submitHandler"],"mappings":"wFAAA,IAAIA,EAAW,CACb,MAAO,GACP,QAAS,EACX,EACA,MAAMC,EAAO,SAAS,cAAc,gBAAgB,EAE9CC,EAAiB,IAAM,CACzB,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAE7E,GAAIA,IAAmB,KAIvB,CAAAH,EAAWG,EAEX,UAAWC,KAAOD,EACVA,EAAe,eAAeC,CAAG,IACjCH,EAAK,SAASG,CAAG,EAAE,MAAQD,EAAeC,CAAG,GAGzD,EAEAF,IAEA,MAAMG,EAAe,GAAK,CACtBL,EAAS,EAAE,OAAO,IAAI,EAAI,EAAE,OAAO,MAAM,OACzC,aAAa,QAAQ,sBAAuB,KAAK,UAAUA,CAAQ,CAAC,CACxE,EAEMM,EAAgB,GAAK,CAEvB,GADA,EAAE,eAAc,EACZ,CAACN,EAAS,OAAS,CAACA,EAAS,QAAS,CACtC,MAAM,wBAAwB,EAC9B,MACH,CACD,QAAQ,IAAIA,CAAQ,EACpB,EAAE,OAAO,QACT,aAAa,WAAW,qBAAqB,EAG7CA,EAAW,CACT,MAAO,GACP,QAAS,EACf,CAEA,EAEAC,EAAK,iBAAiB,QAASI,CAAY,EAC3CJ,EAAK,iBAAiB,SAAUK,CAAa"}